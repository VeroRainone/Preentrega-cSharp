@inject NavigationManager NavigationManager
@inject ProductosBusiness Business

<EditForm Model="Producto" OnValidSubmit="CrearOActualizarProducto" FormName="productos-form">
 <DataAnnotationsValidator/>
 <ValidationSummary/>   
    <div class="form-group">
        <label for="descripcion">
            Descripcion
            <InputText type="text" class="form-control" id="descripcion" @bind-Value="Producto.Descripcion" />
        </label>
    </div>
    <div class="form-group">
        <label for="costo">
            Costo
            <InputNumber type="number" class="form-control" id="costo" @bind-Value="Producto.Costo" />
        </label>
    </div>
    <div class="form-group">
        <label for="precioVenta">
            Precio de Venta
            <InputNumber type="number" class="form-control" id="precioVenta" @bind-Value="Producto.PrecioVenta" />
        </label>
    </div>
    <div class="form-group">
        <label for="stock">
            Stock
            <InputNumber type="number" class="form-control" id="stock" @bind-Value="Producto.Stock" />
        </label>
    </div>
    <div class="form-group">
        <label for="IdUsuario">
            Id Usuario
            <InputNumber type="number" class="form-control" id="IdUsuario" @bind-Value="Producto.IdUsuario" />
        </label>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {
    [Parameter]
    public Producto? Producto { get; set; } 
    protected override void OnInitialized() {   }

    public void CrearOActualizarProducto()
    {
        if (Producto != null)
        {
            if (Producto.Id > 0)
            {
                Business.UpdateProducto(Producto.Id, Producto);
            }
            else
            {
                Business.InsertProducto(Producto);
            }
            NavigationManager.NavigateTo("/productos");
        }
    }
}
